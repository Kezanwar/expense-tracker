{"version":3,"sources":["components/expenses/ExpenseDate.js","components/expenses/ExpenseItem.js","components/expenses/Expenses.js","components/expenseFilter/ExpensesFilter.js","components/newExpense/NewExpense.js","components/newExpense/NewExpenseTextbox.js","components/newExpense/NewExpenseTable.js","components/expenseChart/ExpenseCalendar.js","components/expenseChart/ExpenseChart.js","App.js","index.js"],"names":["ExpenseDate","props","className","month","number","year","ExpenseItem","dateArray","Date","expense","date","toDateString","split","dateDay","dateNumber","dateMonth","dateYear","thisId","id","useState","vis","setVis","onClick","prev","setTimeout","updateExpenses","filteredExpenseArray","filter","expenseStorage","localStorage","getItem","JSON","parse","length","removeItem","setItem","stringify","day","title","amount","toFixed","Expenses","filteredObjects","expenses","object","filterDate","sort","a","b","valueOf","map","ExpensesFilter","filteredAmount","ar","sum","i","simpleArraySum","obj","options","fieldSeparator","quoteStrings","decimalSeparator","showLabels","showTitle","useTextFile","useBom","useKeysAsHeaders","filename","csvExporter","ExportToCsv","csvData","Expense","Amount","value","onChange","event","setFilterDate","target","generateCsv","class","e","liftChartState","chart","NewExpense","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","some","el","uniq","getTime","newExpense","parseFloat","liftNewExpense","type","min","step","max","NewExpenseTextbox","href","NewExpenseTable","ExpenseCalendar","data","forEach","filteredObject","dataObject","push","from","to","emptyColor","colors","margin","top","right","bottom","left","yearSpacing","monthBorderColor","dayBorderWidth","dayBorderColor","legends","anchor","direction","translateY","itemCount","itemWidth","itemHeight","itemsSpacing","itemDirection","ExpenseChart","App","console","log","setChart","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.010af3bb.chunk.js","sourcesContent":["\n\nfunction ExpenseDate(props) {\n    return (\n        <div className=\"expense-item__date\">\n            <h2 className=\"month\">{props.month}</h2>\n            <h2 className=\"number\">{props.number}</h2>\n            <h2>{props.year}</h2>\n        </div>\n    )\n}\n\nexport default ExpenseDate;","import React, { useState } from 'react'\nimport ExpenseDate from './ExpenseDate';\nimport './ExpenseItem.css';\n\n\nconst ExpenseItem = (props) => {\n\n    const date = new Date(props.expense.date).toDateString();\n    const dateArray = date.split(\" \");\n    const dateDay = dateArray[0];\n    const dateNumber = dateArray[2];\n    const dateMonth = dateArray[1];\n    const dateYear = dateArray[3];\n    const thisId = props.expense.id;\n\n\n    const [vis, setVis] = useState(true);\n    const removeExpense = () => {\n        setVis(prev => !prev);\n        setTimeout(() => {\n            props.updateExpenses((prev) => {\n                const filteredExpenseArray = prev.filter(expense => expense.id !== thisId);\n                const expenseStorage = localStorage.getItem('expenses');\n                const json = JSON.parse(`${expenseStorage}`);\n                if (json.length === 1) {\n                    localStorage.removeItem('expenses');\n                }\n                else {\n                    localStorage.setItem('expenses', JSON.stringify([filteredExpenseArray]));\n                }\n                return filteredExpenseArray\n            })\n        }, 350);\n\n    }\n\n    return (\n        <div className={vis ? \"expense-item\" : \"expense-item hide\"}>\n            <button onClick={removeExpense} className=\"backspace\">x</button>\n            <ExpenseDate year={dateYear} day={dateDay} number={dateNumber} month={dateMonth} />\n            <div className=\"expense-item__description\">\n                <h2 >{props.expense.title}</h2>\n                <div className=\"expense-item__price\">Â£{props.expense.amount.toFixed(2)}</div>\n            </div>\n        </div >\n    )\n}\n\nexport default ExpenseItem;","import React from 'react'\nimport ExpenseItem from './ExpenseItem';\nimport './Expenses.css';\n\nconst Expenses = (props) => {\n    // filter objects by state of year dropdown in expense filter\n    const filteredObjects = props.expenses.filter(object => {\n        // if (object.date.type)\n        return object.date.split('-')[0] === props.filterDate\n    });\n    // sort by date helper function\n    function byDate(a, b) {\n        return a.date.valueOf() - b.date.valueOf();\n    }\n    // sort filtered object by date for UI rendering\n    filteredObjects.sort(byDate);\n\n    return (\n        <div className=\"expenses\">\n            {filteredObjects.length > 0 ?\n                filteredObjects.map(object => {\n                    return <ExpenseItem key={object.id} updateExpenses={props.updateExpenses} expense={object} />\n                })\n                :\n                <div className=\"expenses__msg\"><p>No expenses tracked for <span className=\"text-gradient\">{props.filterDate}</span>...</p></div>}\n        </div>\n    )\n}\n\nexport default Expenses;","import React from 'react';\nimport { ExportToCsv } from 'export-to-csv';\nimport './ExpensesFilter.css';\n\nconst ExpensesFilter = (props) => {\n\n    // --- filtered amount block ---\n\n    //  filter objects by state of year dropdown in expense filter\n\n    const filteredObjects = props.expenses.filter(object => {\n\n        // if (object.date.type)\n        return object.date.split('-')[0] === props.filterDate\n\n    });\n\n    function byDate(a, b) {\n        return a.date.valueOf() - b.date.valueOf();\n    }\n\n    filteredObjects.sort(byDate);\n\n    function simpleArraySum(ar) {\n        var sum = 0;\n        for (var i = 0; i < ar.length; i++) {\n            sum += ar[i];\n        }\n        return sum;\n    }\n\n    const arr = filteredObjects.map(obj => obj.amount);\n\n    const filteredAmount = simpleArraySum(arr);\n\n    // --- filtered amount block end ---\n\n    // --- CSV block ---\n\n    const options = {\n        fieldSeparator: ',',\n        quoteStrings: '\"',\n        decimalSeparator: '.',\n        showLabels: true,\n        showTitle: true,\n        title: props.filterDate + ': Â£' + filteredAmount,\n        useTextFile: false,\n        useBom: true,\n        useKeysAsHeaders: true,\n        filename: `${props.filterDate}__expenseTrackerKez`\n    };\n\n    const csvExporter = new ExportToCsv(options);\n\n    const csvData = filteredObjects.map(obj => {\n        return {\n            Expense: obj.title,\n            Amount: 'Â£' + obj.amount,\n            Date: obj.date\n        }\n    });\n\n    // --- CSV block end ---\n\n    const expenseFilterHandler = (event) => {\n        props.setFilterDate(event.target.value);\n    }\n\n    const chartStateHandler = (e) => {\n        props.liftChartState();\n    }\n\n    const csvHandler = () => {\n        if (csvData.length === 0) {\n            return\n        }\n        else {\n            csvExporter.generateCsv(csvData);\n        }\n\n    }\n\n    return (\n        <div className='expenses-filter'>\n            <div className='expenses-filter__control'>\n                <div className='expense-filter__control-box'>\n                    <select className='text-gradient' value={props.filterDate} onChange={expenseFilterHandler}>\n                        <option value='2022'>2022 &#8600; </option>\n                        <option value='2021'>2021 &#8600;</option>\n                        <option value='2020'>2020 &#8600;</option>\n                        <option value='2019'>2019 &#8600;</option>\n                    </select>\n                    <div className=\"expensesTotal\">{filteredAmount > 0 ? 'Year Total:' : ''} <span className='text-gradient' >{filteredAmount > 0 ? 'Â£' + filteredAmount.toFixed(2) : ''}</span></div>\n                </div>\n                <div className='expense-filter__control-box' >\n                    <div onClick={csvHandler} className=\"csv-div text-gradient\">\n                        <p className='text-gradient'>Download</p>\n                        <i class=\"fas fa-file-csv\"></i>\n                    </div>\n                    <div>\n                        <i onClick={chartStateHandler} class={props.chart === false ? 'far fa-chart-bar' : 'far fa-chart-bar active'}></i>\n                    </div>\n                </div>\n\n            </div>\n        </div >\n    );\n};\n\nexport default ExpensesFilter;","import React, { useState } from 'react'\nimport './NewExpense.css'\n\n\nfunction NewExpense(props) {\n\n    const [enteredTitle, setEnteredTitle] = useState('')\n    const [enteredAmount, setEnteredAmount] = useState('')\n    const [enteredDate, setEnteredDate] = useState('')\n\n    const titleChangeHandler = (event) => {\n        setEnteredTitle(event.target.value);\n    };\n\n    const amountChangeHandler = (event) => {\n        setEnteredAmount(event.target.value);\n    };\n\n    const dateChangeHandler = (event) => {\n        setEnteredDate(event.target.value);\n    };\n\n    const submitFormHandler = (event) => {\n        event.preventDefault();\n        const formArray = [enteredAmount, enteredTitle, enteredDate];\n        if (formArray.some(el => el === '')) {\n            return\n        }\n\n        else {\n            const uniq = 'id' + (new Date()).getTime()\n            const newExpense = {\n                title: enteredTitle,\n                amount: parseFloat(enteredAmount),\n                date: enteredDate,\n                id: uniq\n            };\n            props.liftNewExpense(newExpense);\n            setEnteredAmount('');\n            // setEnteredDate('');\n            setEnteredTitle('');\n        }\n    };\n\n    return (\n        <div className=\"new-expense\">\n            <form onSubmit={submitFormHandler}>\n                <div className=\"new-expense__controls\">\n\n                    <div className=\"new-expense__control\">\n                        <label className=\"text-gradient\">Expense Title</label>\n                        <input type='text' value={enteredTitle} onChange={titleChangeHandler} />\n                    </div>\n\n                    <div className=\"new-expense__control\">\n                        <label className=\"text-gradient\">Expense Amount</label>\n                        <input type='number' value={enteredAmount} onChange={amountChangeHandler} min='0.01' step='0.01' />\n                    </div>\n\n                    <div className=\"new-expense__control\">\n                        <label className=\"text-gradient\">Expense Date</label>\n                        <input type='date' value={enteredDate} onChange={dateChangeHandler} min='2019-01-01' max='2022-12-31' />\n                    </div>\n\n                    <div className=\"new-expense__control btn\">\n                        <button className=\"background-gradient\" type='submit'>Track Expense <i class=\"fas fa-pencil-alt\"></i></button>\n                    </div>\n\n                </div>\n            </form>\n        </div>\n    )\n}\n\nexport default NewExpense\n","import React from 'react'\nimport './NewExpense.css'\nimport './NewExpenseAnimations.css'\n\n\n\nfunction NewExpenseTextbox() {\n    return (\n        <div className=\"new-expense__textbox\">\n            <div className=\"new-expense__textbox__toptext\">\n                <h2 className=\"text-gradient\">Expense Tracker.</h2>\n                <p>A ReactJS App for tracking your monthly expenses, by <a className=\"link-gradient\" href=\"www.github.com/kezanwar\" target=\"_blank\" >Kez Anwar.</a></p>\n                {/* Need to break icons into own component for chaining to user input timeline */}\n                <div className=\"icons\"><i className=\"fas fa-hand-holding-usd icon\"></i><i className=\"fas fa-donate icon\"></i><i className=\"fas fa-piggy-bank icon\"></i><i className=\"fas fa-long-arrow-alt-right icon\"></i></div>\n            </div>\n            <div className=\"new-expense__textbox__bottomtext\" >\n                Expenditure is an outflow of money, or any form of fortune in general, to another person or group as payment for an item, service, or other category of costs. For a tenant, rent is an expense. For students or parents, tuition is an expense.\n                Buying food, clothing, furniture or an automobile is often referred to as an expense. An expense is a cost that is \"paid\" or \"remitted\", usually in exchange for something of value. Something that seems to cost a great deal is \"expensive\". Something that seems to cost little is \"inexpensive\". \"Expenses of the table\" are expenses of dining, refreshments, a feast, etc.\n            </div>\n\n        </div>\n    )\n}\n\nexport default NewExpenseTextbox\n","import React from 'react'\nimport NewExpense from './NewExpense'\nimport NewExpenseTextbox from './NewExpenseTextbox'\nimport './NewExpense.css'\n\nexport default function NewExpenseTable(props) {\n\n    return (\n        <div className=\"new-expense__table\">\n            <NewExpenseTextbox />\n            <NewExpense liftNewExpense={props.liftNewExpense} />\n        </div>\n    )\n}\n","import React from 'react'\nimport './ExpenseChart.css'\nimport { ResponsiveCalendar } from '@nivo/calendar'\n\n\nfunction ExpenseCalendar(props) {\n\n    // filter objects by state of year dropdown in expense filter\n\n    const filteredObjects = props.expenses.filter(object => {\n        return object.date.split('-')[0] === props.filterDate\n    });\n\n    // sort by date helper function\n\n    let data = []\n\n    filteredObjects.forEach(filteredObject => {\n\n        const existsArray = data.filter(dataObject => dataObject.day === filteredObject.date)\n\n        if (existsArray.length > 0) {\n            data.forEach(dataObject => {\n                if (dataObject.day === filteredObject.date) {\n                    dataObject.value = dataObject.value + filteredObject.amount\n                }\n                else {\n                    return\n                }\n            })\n        }\n        else {\n            data.push({\n                value: filteredObject.amount,\n                day: filteredObject.date\n            });\n        }\n    });\n\n    return (\n\n        <div className='calendarSection'>\n            <ResponsiveCalendar\n                data={data}\n                from={props.filterDate + '-01-01'}\n                to={props.filterDate + '-12-12'}\n                emptyColor=\"#eeeeee\"\n                colors={['##10b1bd', '##10b1bd75', '#6215dd75', '#6215dd']}\n                margin={{ top: 0, right: 0, bottom: 0, left: 0 }}\n                yearSpacing={0}\n                monthBorderColor=\"#ffffff\"\n                dayBorderWidth={2}\n                dayBorderColor=\"#ffffff\"\n                legends={[\n                    {\n                        anchor: 'bottom-right',\n                        direction: 'row',\n                        translateY: 36,\n                        itemCount: 4,\n                        itemWidth: 70,\n                        itemHeight: 36,\n                        itemsSpacing: 14,\n                        itemDirection: 'right-to-left'\n                    }\n                ]}\n            />\n        </div>\n    )\n}\n\nexport default ExpenseCalendar\n","import React from 'react'\nimport './ExpenseChart.css'\nimport ExpenseCalendar from './ExpenseCalendar'\n\n\nfunction ExpenseChart(props) {\n\n    if (props.chart === true) return (\n        <div className='chartSection'>\n            <ExpenseCalendar filterDate={props.filterDate} expenses={props.expenses} />\n        </div>\n    )\n\n    else return (\n        <div></div>\n    )\n}\n\nexport default ExpenseChart\n","import Expenses from './components/expenses/Expenses';\nimport ExpensesFilter from './components/expenseFilter/ExpensesFilter';\nimport NewExpenseTable from './components/newExpense/NewExpenseTable';\nimport ExpenseChart from './components/expenseChart/ExpenseChart';\nimport React, { useState } from 'react'\n\nfunction App() {\n\n  const [expenses, updateExpenses] = useState(() => {\n    const expenseStorage = localStorage.getItem('expenses');\n    if (expenseStorage === null) (console.log('null'));\n    return expenseStorage !== null\n      ? JSON.parse(expenseStorage)\n      : [];\n  });\n\n  // const [expenses, updateExpenses] = useState([{\n  //   title: 'Haircut',\n  //   amount: 12.00,\n  //   date: new Date(2020, 7, 14),\n  //   id: 1234\n  // },\n  // {\n  //   title: 'Chocolate',\n  //   amount: 12.00,\n  //   date: new Date(2021, 11, 13),\n  //   id: 12345\n  // },\n  // {\n  //   title: 'Chocolate',\n  //   amount: 12.00,\n  //   date: new Date(2021, 11, 15),\n  //   id: 123456\n  // }]);\n\n  const [filterDate, setFilterDate] = useState('2022');\n\n  const [chart, setChart] = useState(false)\n\n  function liftNewExpense(newExpense) {\n    updateExpenses((prev) => {\n      localStorage.setItem('expenses', JSON.stringify([...prev, newExpense]));\n      return [...prev, newExpense]\n    });\n  }\n\n  const liftChartState = () => {\n    setChart(prev => !prev);\n  }\n\n  return (\n\n    <div>\n\n      <NewExpenseTable liftNewExpense={liftNewExpense} />\n\n      <ExpensesFilter chart={chart} liftChartState={liftChartState} expenses={expenses} filterDate={filterDate} setFilterDate={setFilterDate} />\n\n      <ExpenseChart chart={chart} filterDate={filterDate} expenses={expenses} />\n\n      <Expenses filterDate={filterDate} expenses={expenses} updateExpenses={updateExpenses} />\n\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}